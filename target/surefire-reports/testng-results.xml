<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="14" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-13T11:57:16 IST" name="Suite" finished-at="2023-02-13T11:59:03 IST" duration-ms="107308">
    <groups>
    </groups>
    <test started-at="2023-02-13T11:57:16 IST" name="Test" finished-at="2023-02-13T11:59:03 IST" duration-ms="107308">
      <class name="generalStore.ECommerceTest_01">
        <test-method is-config="true" signature="preSetup()[pri:0, instance:generalStore.ECommerceTest_01@12968227]" started-at="2023-02-13T11:57:17 IST" name="preSetup" finished-at="2023-02-13T11:57:53 IST" duration-ms="35474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preSetup -->
        <test-method signature="fillFormNegativeTest()[pri:0, instance:generalStore.ECommerceTest_01@12968227]" started-at="2023-02-13T11:57:53 IST" name="fillFormNegativeTest" finished-at="2023-02-13T11:57:59 IST" duration-ms="6825" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [enter your name] but found [Please enter your name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [enter your name] but found [Please enter your name]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at generalStore.ECommerceTest_01.fillFormNegativeTest(ECommerceTest_01.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillFormNegativeTest -->
        <test-method is-config="true" signature="preSetup()[pri:0, instance:generalStore.ECommerceTest_01@12968227]" started-at="2023-02-13T11:58:00 IST" name="preSetup" finished-at="2023-02-13T11:58:10 IST" duration-ms="9894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preSetup -->
        <test-method signature="fillFormPositiveTest()[pri:0, instance:generalStore.ECommerceTest_01@12968227]" started-at="2023-02-13T11:58:10 IST" name="fillFormPositiveTest" finished-at="2023-02-13T11:58:27 IST" duration-ms="17387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillFormPositiveTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:generalStore.ECommerceTest_01@12968227]" started-at="2023-02-13T11:58:27 IST" name="tearDown" finished-at="2023-02-13T11:58:28 IST" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- generalStore.ECommerceTest_01 -->
      <class name="generalStore.ECommerceTest_02">
        <test-method signature="sumOfcartProducts()[pri:0, instance:generalStore.ECommerceTest_02@131ff6fa]" started-at="2023-02-13T11:58:28 IST" name="sumOfcartProducts" finished-at="2023-02-13T11:59:03 IST" duration-ms="34929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumOfcartProducts -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:generalStore.ECommerceTest_02@131ff6fa]" started-at="2023-02-13T11:59:03 IST" name="tearDown" finished-at="2023-02-13T11:59:03 IST" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- generalStore.ECommerceTest_02 -->
      <class name="excelConfigTest.ExcelTest">
        <test-method signature="form(java.util.HashMap)[pri:0, instance:excelConfigTest.ExcelTest@341672e]" started-at="2023-02-13T11:57:16 IST" name="form" data-provider="jsonProvider" finished-at="2023-02-13T11:57:16 IST" duration-ms="41" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=rahul rajput, country=Australia, gender=Male}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- form -->
        <test-method signature="form(java.util.HashMap)[pri:0, instance:excelConfigTest.ExcelTest@341672e]" started-at="2023-02-13T11:57:17 IST" name="form" data-provider="jsonProvider" finished-at="2023-02-13T11:57:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=Rajput , country=Argentina, gender=Female}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- form -->
        <test-method signature="form(java.util.HashMap)[pri:0, instance:excelConfigTest.ExcelTest@341672e]" started-at="2023-02-13T11:57:17 IST" name="form" data-provider="jsonProvider" finished-at="2023-02-13T11:57:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=Planit rajput, country=Australia, gender=Male}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- form -->
        <test-method signature="form(java.util.HashMap)[pri:0, instance:excelConfigTest.ExcelTest@341672e]" started-at="2023-02-13T11:57:17 IST" name="form" data-provider="jsonProvider" finished-at="2023-02-13T11:57:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=Allt , country=Argentina, gender=Female}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- form -->
        <test-method signature="form(java.util.HashMap)[pri:0, instance:excelConfigTest.ExcelTest@341672e]" started-at="2023-02-13T11:57:17 IST" name="form" data-provider="jsonProvider" finished-at="2023-02-13T11:57:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=Test, country=Australia, gender=Male}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- form -->
        <test-method signature="form(java.util.HashMap)[pri:0, instance:excelConfigTest.ExcelTest@341672e]" started-at="2023-02-13T11:57:17 IST" name="form" data-provider="jsonProvider" finished-at="2023-02-13T11:57:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=Amazing , country=Argentina, gender=Female}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- form -->
        <test-method signature="tc_01()[pri:0, instance:excelConfigTest.ExcelTest@341672e]" started-at="2023-02-13T11:57:17 IST" name="tc_01" finished-at="2023-02-13T11:57:17 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc_01 -->
        <test-method signature="tc_03()[pri:0, instance:excelConfigTest.ExcelTest@341672e]" started-at="2023-02-13T11:57:17 IST" name="tc_03" finished-at="2023-02-13T11:57:17 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc_03 -->
        <test-method signature="testData()[pri:0, instance:excelConfigTest.ExcelTest@341672e]" started-at="2023-02-13T11:57:17 IST" name="testData" finished-at="2023-02-13T11:57:17 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
      </class> <!-- excelConfigTest.ExcelTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
